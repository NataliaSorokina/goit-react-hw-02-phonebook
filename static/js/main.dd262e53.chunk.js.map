{"version":3,"sources":["App.styled.js","components/Section/Section.styled.js","components/Section/Section.js","components/ContactForm/ContactForm.styled.js","components/Button/Button.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["MainTitle","styled","h1","MinorTitle","h2","Section","title","children","Form","form","Label","label","Input","input","Button","button","ContactForm","state","name","number","handleInputChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","onChange","pattern","required","Component","List","ul","ListItem","li","ContactList","contacts","onDeleteContact","map","contact","onClick","id","FilterLabel","FilterInput","Filter","App","filter","formSubmitHandler","data","newContact","uuidv4","some","alert","filterChangeHandler","console","log","getfilteredContacts","normilizedFilter","toLowerCase","record","includes","deleteContact","contactId","prevState","filteredContacts","React","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd262e53.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const MainTitle = styled.h1`\n  font-weight: 700;\n  font-size: 32px;\n  text-align: center;\n  text-transform: uppercase;\n  margin-bottom: 30px;\n`;\n","import styled from \"@emotion/styled\";\r\n\r\nexport const MinorTitle = styled.h2`\r\n  margin: 0;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-weight: 700;\r\n  font-size: 26px;\r\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MinorTitle } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <MinorTitle>{title}</MinorTitle>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  margin: 10px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 4px;\r\n  margin-left: 10px;\r\n`;\r\n\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Button = styled.button`\r\n width: auto;\r\n  height: 40px;\r\n  font-weight: normal;\r\n  font-size: 16px;\r\n  margin: 20px;\r\n  padding: 10px 20px;\r\n  color: #fff;\r\n  background-color: dodgerblue;\r\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\r\n  border-radius: 5px;\r\n  border: none;\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color:  rgb(39, 24, 245);    \r\n  }\r\n`;\r\n\r\n\r\n","import React, { Component } from 'react';\nimport { Form, Label, Input } from './ContactForm.styled';\nimport { Button } from 'components/Button/Button.styled';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label htmlFor=\"name\">\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleInputChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например, Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </Label>\n        <Label htmlFor=\"number\">\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleInputChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import styled from \"@emotion/styled\";\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap; \r\n  margin-top: 15px; \r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  display: flex;\r\n  flex-basis: 1/3;\r\n  width: 30%;\r\n  justify-content: space-between;  \r\n  align-items: center;\r\n  margin: 10px 20px;\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { List, ListItem } from 'components/ContactList/ContactList.styled';\nimport { Button } from 'components/Button/Button.styled';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <List>\n    {contacts.map(contact => (\n      <ListItem key={contact.id}>\n        {contact.name}: {contact.number}\n        <Button\n          type=\"button\"\n          onClick={() => onDeleteContact(contact.id)}\n        >\n          Delete\n        </Button>\n      </ListItem>\n    ))}\n  </List>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import styled from \"@emotion/styled\";\r\n\r\nexport const FilterLabel = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-weight: 400;\r\n  font-size: 18px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nexport const FilterInput = styled.input`\r\n margin-top: 10px;\r\n padding: 4px;\r\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FilterLabel, FilterInput } from './Filter.styled';\n\nconst Filter = ({ value, onChange }) => (\n  <FilterLabel>\n    Find contacts by name <FilterInput type=\"text\" value={value} onChange={onChange} />\n  </FilterLabel>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { MainTitle } from './App.styled';\nimport Section from 'components/Section/Section';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nclass App extends React.Component {\n  state = {\n    contacts: [\n      { id: 'BlindBandit', name: 'Toph Beifong', number: '459-12-56' },\n      { id: 'SifuHotman', name: 'Zuko Roku', number: '443-89-12' },\n      { id: 'BlueFire', name: 'Azula Sozin', number: '645-17-79' },\n      { id: 'Twinkletoes', name: 'Aang Gyatso', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  formSubmitHandler = data => {\n    const { contacts } = this.state;\n    const { name, number } = data;\n    const newContact= {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n\n    if (contacts.some(contact => contact.name === newContact.name)) {\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    } else {\n      this.setState({\n        contacts: [...this.state.contacts, newContact],\n      });\n    }\n  };\n\n  filterChangeHandler = event => {\n    console.log(event.currentTarget.value);\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getfilteredContacts = () => {\n    const normilizedFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter(record =>\n      record.name.toLowerCase().includes(normilizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const filteredContacts = this.getfilteredContacts();\n\n    return (\n      <>\n        <MainTitle>Phonebook</MainTitle>\n\n        <ContactForm onSubmit={this.formSubmitHandler} />\n\n        <Section title=\"Contacts\">\n          <Filter value={this.state.filter} onChange={this.filterChangeHandler} />\n          <ContactList contacts={filteredContacts} onDeleteContact={this.deleteContact} />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}